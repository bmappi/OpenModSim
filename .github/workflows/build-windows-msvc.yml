name: Build omodsim on Windows MSVC

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  BUILD_TYPE: Release

jobs:
  build-windows-msvc:
    name: Build on Windows MSVC
    runs-on: windows-latest
    strategy:
      matrix:
        arch: [win64_msvc2019_64, win32_msvc2019]
        include:
          - arch: win64_msvc2019_64
            msvc_arch: x64
            output_arch: x86_64
            qt_arch_install: msvc2019_64
          - arch: win32_msvc2019
            msvc_arch: x86
            output_arch: x86
            qt_arch_install: msvc2019

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup MSVC
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.msvc_arch }}

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install aqtinstall
        run: |
          python -m pip install aqtinstall

      - name: Set up Qt 5.15
        uses: jurplel/install-qt-action@v4
        with:
          version: 5.15.2
          host: windows
          target: desktop
          arch: ${{ matrix.arch }}
          # modules: qtserialport qtserialbus qttools
          setup-python: false
          dir: "C:\\"

      - name: Add Qt to PATH
        run: |
          echo "C:\Qt\5.15.2\${{ matrix.qt_arch_install }}\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        shell: powershell

      - name: Install Build Tools
        run: |
          choco install -y ninja
        shell: cmd

      - name: Configure CMake
        shell: cmd
        run: |
          cmake -S . -B build ^
                -G "Ninja" ^
                -DCMAKE_BUILD_TYPE=%BUILD_TYPE% ^
                -DCMAKE_PREFIX_PATH="C:\Qt\5.15.2\${{ matrix.qt_arch_install }}"

      - name: Build Project
        shell: cmd
        run: |
          cmake --build build --config %BUILD_TYPE%

      - name: Deploy Qt dependencies using windeployqt
        shell: cmd
        run: |
          windeployqt build\omodsim.exe --release

      - name: Upload Executable
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: omodsim-windows-msvc-${{ matrix.output_arch }}
          path: |
            ./build/omodsim.exe
            ./build/*.dll
            ./build/platforms/
            !**/*.pdb