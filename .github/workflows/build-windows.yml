name: Build omodsim on Windows

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:


env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build-windows:
    name: Build on Windows with Qt 5.15
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - uses: ilammy/msvc-dev-cmd@v1

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install aqtinstall
        run: |
          python -m pip install aqtinstall

      - name: Set up Qt 5.15
        uses: jurplel/install-qt-action@v4
        with:
          version: 5.15.2
          host: windows
          target: desktop
          arch: win64_msvc2019_64
          # modules: qtserialport qtserialbus qtquickcontrols2 qttools
          setup-python: false
          dir: "C:\\"
          
      - name: Add Qt to PATH
        run: |
          echo "C:\Qt\5.15.2\msvc2019_64\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        shell: powershell

      - name: Install Build Tools
        run: |
          choco install -y ninja
        shell: cmd
      
      - name: Configure CMake (MSVC)
        shell: cmd
        run: |
          "C:\Program Files (x86)\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat" ^
          && cmake -S .\omodsim -B build ^
             -G "Ninja" ^
             -DCMAKE_BUILD_TYPE=%BUILD_TYPE% ^
             -DCMAKE_PREFIX_PATH="C:\Qt\5.15.2\msvc2019_64"
      
      - name: Build Project
        shell: cmd
        run: |
          "C:\Program Files (x86)\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat" ^
          && cmake --build build --config %BUILD_TYPE%
      
      - name: Copy required Qt DLLs to build folder
        shell: powershell
        run: |
          $qtBin = "C:\Qt\5.15.2\msvc2019_64\bin"
          $dest = "build"

          $dlls = @(
            "Qt5Core.dll",
            "Qt5Gui.dll",
            "Qt5Widgets.dll",
            "Qt5Network.dll",
            "Qt5SerialPort.dll",
            "Qt5SerialBus.dll",
            "Qt5Qml.dll",
            "Qt5PrintSupport.dll",
            "Qt5Help.dll"
          )

          foreach ($dll in $dlls) {
            Copy-Item "$qtBin\$dll" "$dest\" -Force
          }

          # Copy Qt platform plugin (required to launch Qt GUI apps)
          New-Item -ItemType Directory -Path "$dest\platforms" -Force
          Copy-Item "$qtBin\..\plugins\platforms\qwindows.dll" "$dest\platforms\" -Force

      
      - name: Upload Entire Build Directory
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: omodsim-build-artifacts
          path: ./build/

      - name: Upload Executable
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: omodsim-windows-x64
          path: |
            ./build/omodsim.exe
            ./build/*.dll
            !**/*.pdb
            !./build/CMakeFiles
            !./build/omodsim_autogen
